/**
 * generated by Xtext 2.35.0
 */
package org.xtext.example.process.process.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.process.process.ComplexParameter;
import org.xtext.example.process.process.Parameter;
import org.xtext.example.process.process.ProcessPackage;
import org.xtext.example.process.process.Task;
import org.xtext.example.process.process.TaskComposite;
import org.xtext.example.process.process.VariableDeclaration;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Task Composite</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.process.process.impl.TaskCompositeImpl#getVariables <em>Variables</em>}</li>
 *   <li>{@link org.xtext.example.process.process.impl.TaskCompositeImpl#getIdentifiant <em>Identifiant</em>}</li>
 *   <li>{@link org.xtext.example.process.process.impl.TaskCompositeImpl#getEntrees <em>Entrees</em>}</li>
 *   <li>{@link org.xtext.example.process.process.impl.TaskCompositeImpl#getSorties <em>Sorties</em>}</li>
 *   <li>{@link org.xtext.example.process.process.impl.TaskCompositeImpl#getDescriptionActeur <em>Description Acteur</em>}</li>
 *   <li>{@link org.xtext.example.process.process.impl.TaskCompositeImpl#getTaches <em>Taches</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TaskCompositeImpl extends TaskImpl implements TaskComposite
{
  /**
   * The cached value of the '{@link #getVariables() <em>Variables</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariables()
   * @generated
   * @ordered
   */
  protected EList<VariableDeclaration> variables;

  /**
   * The default value of the '{@link #getIdentifiant() <em>Identifiant</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdentifiant()
   * @generated
   * @ordered
   */
  protected static final String IDENTIFIANT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIdentifiant() <em>Identifiant</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdentifiant()
   * @generated
   * @ordered
   */
  protected String identifiant = IDENTIFIANT_EDEFAULT;

  /**
   * The cached value of the '{@link #getEntrees() <em>Entrees</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntrees()
   * @generated
   * @ordered
   */
  protected EList<Parameter> entrees;

  /**
   * The cached value of the '{@link #getSorties() <em>Sorties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSorties()
   * @generated
   * @ordered
   */
  protected EList<Parameter> sorties;

  /**
   * The default value of the '{@link #getDescriptionActeur() <em>Description Acteur</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescriptionActeur()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_ACTEUR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescriptionActeur() <em>Description Acteur</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescriptionActeur()
   * @generated
   * @ordered
   */
  protected String descriptionActeur = DESCRIPTION_ACTEUR_EDEFAULT;

  /**
   * The cached value of the '{@link #getTaches() <em>Taches</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTaches()
   * @generated
   * @ordered
   */
  protected EList<Task> taches;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TaskCompositeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ProcessPackage.Literals.TASK_COMPOSITE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<VariableDeclaration> getVariables()
  {
    if (variables == null)
    {
      variables = new EObjectContainmentEList<VariableDeclaration>(VariableDeclaration.class, this, ProcessPackage.TASK_COMPOSITE__VARIABLES);
    }
    return variables;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIdentifiant()
  {
    return identifiant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIdentifiant(String newIdentifiant)
  {
    String oldIdentifiant = identifiant;
    identifiant = newIdentifiant;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.TASK_COMPOSITE__IDENTIFIANT, oldIdentifiant, identifiant));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Parameter> getEntrees()
  {
    if (entrees == null)
    {
      entrees = new EObjectContainmentEList<Parameter>(Parameter.class, this, ProcessPackage.TASK_COMPOSITE__ENTREES);
    }
    return entrees;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Parameter> getSorties()
  {
    if (sorties == null)
    {
      sorties = new EObjectContainmentEList<Parameter>(Parameter.class, this, ProcessPackage.TASK_COMPOSITE__SORTIES);
    }
    return sorties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescriptionActeur()
  {
    return descriptionActeur;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescriptionActeur(String newDescriptionActeur)
  {
    String oldDescriptionActeur = descriptionActeur;
    descriptionActeur = newDescriptionActeur;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.TASK_COMPOSITE__DESCRIPTION_ACTEUR, oldDescriptionActeur, descriptionActeur));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Task> getTaches()
  {
    if (taches == null)
    {
      taches = new EObjectContainmentEList<Task>(Task.class, this, ProcessPackage.TASK_COMPOSITE__TACHES);
    }
    return taches;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ProcessPackage.TASK_COMPOSITE__VARIABLES:
        return ((InternalEList<?>)getVariables()).basicRemove(otherEnd, msgs);
      case ProcessPackage.TASK_COMPOSITE__ENTREES:
        return ((InternalEList<?>)getEntrees()).basicRemove(otherEnd, msgs);
      case ProcessPackage.TASK_COMPOSITE__SORTIES:
        return ((InternalEList<?>)getSorties()).basicRemove(otherEnd, msgs);
      case ProcessPackage.TASK_COMPOSITE__TACHES:
        return ((InternalEList<?>)getTaches()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ProcessPackage.TASK_COMPOSITE__VARIABLES:
        return getVariables();
      case ProcessPackage.TASK_COMPOSITE__IDENTIFIANT:
        return getIdentifiant();
      case ProcessPackage.TASK_COMPOSITE__ENTREES:
        return getEntrees();
      case ProcessPackage.TASK_COMPOSITE__SORTIES:
        return getSorties();
      case ProcessPackage.TASK_COMPOSITE__DESCRIPTION_ACTEUR:
        return getDescriptionActeur();
      case ProcessPackage.TASK_COMPOSITE__TACHES:
        return getTaches();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ProcessPackage.TASK_COMPOSITE__VARIABLES:
        getVariables().clear();
        getVariables().addAll((Collection<? extends VariableDeclaration>)newValue);
        return;
      case ProcessPackage.TASK_COMPOSITE__IDENTIFIANT:
        setIdentifiant((String)newValue);
        return;
      case ProcessPackage.TASK_COMPOSITE__ENTREES:
        getEntrees().clear();
        getEntrees().addAll((Collection<? extends Parameter>)newValue);
        return;
      case ProcessPackage.TASK_COMPOSITE__SORTIES:
        getSorties().clear();
        getSorties().addAll((Collection<? extends Parameter>)newValue);
        return;
      case ProcessPackage.TASK_COMPOSITE__DESCRIPTION_ACTEUR:
        setDescriptionActeur((String)newValue);
        return;
      case ProcessPackage.TASK_COMPOSITE__TACHES:
        getTaches().clear();
        getTaches().addAll((Collection<? extends Task>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ProcessPackage.TASK_COMPOSITE__VARIABLES:
        getVariables().clear();
        return;
      case ProcessPackage.TASK_COMPOSITE__IDENTIFIANT:
        setIdentifiant(IDENTIFIANT_EDEFAULT);
        return;
      case ProcessPackage.TASK_COMPOSITE__ENTREES:
        getEntrees().clear();
        return;
      case ProcessPackage.TASK_COMPOSITE__SORTIES:
        getSorties().clear();
        return;
      case ProcessPackage.TASK_COMPOSITE__DESCRIPTION_ACTEUR:
        setDescriptionActeur(DESCRIPTION_ACTEUR_EDEFAULT);
        return;
      case ProcessPackage.TASK_COMPOSITE__TACHES:
        getTaches().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ProcessPackage.TASK_COMPOSITE__VARIABLES:
        return variables != null && !variables.isEmpty();
      case ProcessPackage.TASK_COMPOSITE__IDENTIFIANT:
        return IDENTIFIANT_EDEFAULT == null ? identifiant != null : !IDENTIFIANT_EDEFAULT.equals(identifiant);
      case ProcessPackage.TASK_COMPOSITE__ENTREES:
        return entrees != null && !entrees.isEmpty();
      case ProcessPackage.TASK_COMPOSITE__SORTIES:
        return sorties != null && !sorties.isEmpty();
      case ProcessPackage.TASK_COMPOSITE__DESCRIPTION_ACTEUR:
        return DESCRIPTION_ACTEUR_EDEFAULT == null ? descriptionActeur != null : !DESCRIPTION_ACTEUR_EDEFAULT.equals(descriptionActeur);
      case ProcessPackage.TASK_COMPOSITE__TACHES:
        return taches != null && !taches.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == Parameter.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == ComplexParameter.class)
    {
      switch (derivedFeatureID)
      {
        case ProcessPackage.TASK_COMPOSITE__VARIABLES: return ProcessPackage.COMPLEX_PARAMETER__VARIABLES;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == Parameter.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == ComplexParameter.class)
    {
      switch (baseFeatureID)
      {
        case ProcessPackage.COMPLEX_PARAMETER__VARIABLES: return ProcessPackage.TASK_COMPOSITE__VARIABLES;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (identifiant: ");
    result.append(identifiant);
    result.append(", descriptionActeur: ");
    result.append(descriptionActeur);
    result.append(')');
    return result.toString();
  }

} //TaskCompositeImpl
