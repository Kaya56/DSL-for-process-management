/*
 * generated by Xtext 2.35.0
 */
package org.xtext.example.process.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.xtext.example.process.services.ProcessGrammarAccess;

@SuppressWarnings("all")
public class ProcessSyntacticSequencer extends AbstractSyntacticSequencer {

	protected ProcessGrammarAccess grammarAccess;
	protected AbstractElementAlias match_ActorCategory___ActeursConcretsKeyword_11_0_ColonKeyword_11_1__q;
	protected AbstractElementAlias match_CustumParameter___LeftCurlyBracketKeyword_4_0_RightCurlyBracketKeyword_4_3__q;
	protected AbstractElementAlias match_CustumParameter___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q;
	protected AbstractElementAlias match_CustumParameter___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q;
	protected AbstractElementAlias match_Process___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q;
	protected AbstractElementAlias match_Process___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q;
	protected AbstractElementAlias match_TaskComposite___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q;
	protected AbstractElementAlias match_TaskComposite___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q;
	protected AbstractElementAlias match_TaskSimple___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q;
	protected AbstractElementAlias match_TaskSimple___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (ProcessGrammarAccess) access;
		match_ActorCategory___ActeursConcretsKeyword_11_0_ColonKeyword_11_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getActorCategoryAccess().getActeursConcretsKeyword_11_0()), new TokenAlias(false, false, grammarAccess.getActorCategoryAccess().getColonKeyword_11_1()));
		match_CustumParameter___LeftCurlyBracketKeyword_4_0_RightCurlyBracketKeyword_4_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getCustumParameterAccess().getLeftCurlyBracketKeyword_4_0()), new TokenAlias(false, false, grammarAccess.getCustumParameterAccess().getRightCurlyBracketKeyword_4_3()));
		match_CustumParameter___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getCustumParameterAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getCustumParameterAccess().getRightParenthesisKeyword_2_2()));
		match_CustumParameter___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getCustumParameterAccess().getLessThanSignKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getCustumParameterAccess().getGreaterThanSignKeyword_3_2()));
		match_Process___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getProcessAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getProcessAccess().getRightParenthesisKeyword_2_2()));
		match_Process___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getProcessAccess().getLessThanSignKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getProcessAccess().getGreaterThanSignKeyword_3_2()));
		match_TaskComposite___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getTaskCompositeAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getTaskCompositeAccess().getRightParenthesisKeyword_2_2()));
		match_TaskComposite___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getTaskCompositeAccess().getLessThanSignKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getTaskCompositeAccess().getGreaterThanSignKeyword_3_2()));
		match_TaskSimple___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getTaskSimpleAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getTaskSimpleAccess().getRightParenthesisKeyword_2_2()));
		match_TaskSimple___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getTaskSimpleAccess().getLessThanSignKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getTaskSimpleAccess().getGreaterThanSignKeyword_3_2()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_ActorCategory___ActeursConcretsKeyword_11_0_ColonKeyword_11_1__q.equals(syntax))
				emit_ActorCategory___ActeursConcretsKeyword_11_0_ColonKeyword_11_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CustumParameter___LeftCurlyBracketKeyword_4_0_RightCurlyBracketKeyword_4_3__q.equals(syntax))
				emit_CustumParameter___LeftCurlyBracketKeyword_4_0_RightCurlyBracketKeyword_4_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CustumParameter___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q.equals(syntax))
				emit_CustumParameter___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CustumParameter___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q.equals(syntax))
				emit_CustumParameter___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Process___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q.equals(syntax))
				emit_Process___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Process___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q.equals(syntax))
				emit_Process___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TaskComposite___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q.equals(syntax))
				emit_TaskComposite___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TaskComposite___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q.equals(syntax))
				emit_TaskComposite___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TaskSimple___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q.equals(syntax))
				emit_TaskSimple___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TaskSimple___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q.equals(syntax))
				emit_TaskSimple___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('acteursConcrets' ':')?
	 *
	 * This ambiguous syntax occurs at:
	 *     descriptionActeur=STRING (ambiguity) '}' (rule end)
	 
	 * </pre>
	 */
	protected void emit_ActorCategory___ActeursConcretsKeyword_11_0_ColonKeyword_11_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     nomParametre=ID ('(' ')')? ('&lt;' '&gt;')? (ambiguity) (rule end)
	 *     parametresEntree+=Parameter ')' ('&lt;' '&gt;')? (ambiguity) (rule end)
	 *     parametresSortie+=Parameter '&gt;' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_CustumParameter___LeftCurlyBracketKeyword_4_0_RightCurlyBracketKeyword_4_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')')?
	 *
	 * This ambiguous syntax occurs at:
	 *     nomParametre=ID (ambiguity) '&lt;' parametresSortie+=Parameter
	 *     nomParametre=ID (ambiguity) ('&lt;' '&gt;')? '{' 'descriptionActeur' ':' descriptionActeur=STRING
	 *     nomParametre=ID (ambiguity) ('&lt;' '&gt;')? '{' variables+=VariableDeclaration
	 *     nomParametre=ID (ambiguity) ('&lt;' '&gt;')? ('{' '}')? (rule end)
	 
	 * </pre>
	 */
	protected void emit_CustumParameter___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('&lt;' '&gt;')?
	 *
	 * This ambiguous syntax occurs at:
	 *     nomParametre=ID ('(' ')')? (ambiguity) '{' 'descriptionActeur' ':' descriptionActeur=STRING
	 *     nomParametre=ID ('(' ')')? (ambiguity) '{' variables+=VariableDeclaration
	 *     nomParametre=ID ('(' ')')? (ambiguity) ('{' '}')? (rule end)
	 *     parametresEntree+=Parameter ')' (ambiguity) '{' 'descriptionActeur' ':' descriptionActeur=STRING
	 *     parametresEntree+=Parameter ')' (ambiguity) '{' variables+=VariableDeclaration
	 *     parametresEntree+=Parameter ')' (ambiguity) ('{' '}')? (rule end)
	 
	 * </pre>
	 */
	protected void emit_CustumParameter___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')')?
	 *
	 * This ambiguous syntax occurs at:
	 *     identifiant=ID (ambiguity) '&lt;' sorties+=Parameter
	 *     identifiant=ID (ambiguity) ('&lt;' '&gt;')? '{' '}' (rule end)
	 *     identifiant=ID (ambiguity) ('&lt;' '&gt;')? '{' acteurCategories+=ActorCategory
	 *     identifiant=ID (ambiguity) ('&lt;' '&gt;')? '{' taches+=Task
	 *     identifiant=ID (ambiguity) ('&lt;' '&gt;')? '{' variables+=VariableDeclaration
	 
	 * </pre>
	 */
	protected void emit_Process___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('&lt;' '&gt;')?
	 *
	 * This ambiguous syntax occurs at:
	 *     entrees+=Parameter ')' (ambiguity) '{' '}' (rule end)
	 *     entrees+=Parameter ')' (ambiguity) '{' acteurCategories+=ActorCategory
	 *     entrees+=Parameter ')' (ambiguity) '{' taches+=Task
	 *     entrees+=Parameter ')' (ambiguity) '{' variables+=VariableDeclaration
	 *     identifiant=ID ('(' ')')? (ambiguity) '{' '}' (rule end)
	 *     identifiant=ID ('(' ')')? (ambiguity) '{' acteurCategories+=ActorCategory
	 *     identifiant=ID ('(' ')')? (ambiguity) '{' taches+=Task
	 *     identifiant=ID ('(' ')')? (ambiguity) '{' variables+=VariableDeclaration
	 
	 * </pre>
	 */
	protected void emit_Process___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')')?
	 *
	 * This ambiguous syntax occurs at:
	 *     identifiant=ID (ambiguity) '&lt;' sorties+=Parameter
	 *     identifiant=ID (ambiguity) ('&lt;' '&gt;')? '{' 'description' ':' descriptionActeur=STRING
	 *     identifiant=ID (ambiguity) ('&lt;' '&gt;')? '{' 'taches' '}' (rule end)
	 *     identifiant=ID (ambiguity) ('&lt;' '&gt;')? '{' 'taches' taches+=Task
	 *     identifiant=ID (ambiguity) ('&lt;' '&gt;')? '{' variables+=VariableDeclaration
	 
	 * </pre>
	 */
	protected void emit_TaskComposite___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('&lt;' '&gt;')?
	 *
	 * This ambiguous syntax occurs at:
	 *     entrees+=Parameter ')' (ambiguity) '{' 'description' ':' descriptionActeur=STRING
	 *     entrees+=Parameter ')' (ambiguity) '{' 'taches' '}' (rule end)
	 *     entrees+=Parameter ')' (ambiguity) '{' 'taches' taches+=Task
	 *     entrees+=Parameter ')' (ambiguity) '{' variables+=VariableDeclaration
	 *     identifiant=ID ('(' ')')? (ambiguity) '{' 'description' ':' descriptionActeur=STRING
	 *     identifiant=ID ('(' ')')? (ambiguity) '{' 'taches' '}' (rule end)
	 *     identifiant=ID ('(' ')')? (ambiguity) '{' 'taches' taches+=Task
	 *     identifiant=ID ('(' ')')? (ambiguity) '{' variables+=VariableDeclaration
	 
	 * </pre>
	 */
	protected void emit_TaskComposite___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')')?
	 *
	 * This ambiguous syntax occurs at:
	 *     identifiant=ID (ambiguity) '&lt;' sorties+=Parameter
	 *     identifiant=ID (ambiguity) ('&lt;' '&gt;')? '{' 'description' ':' descriptionActeur=STRING
	 *     identifiant=ID (ambiguity) ('&lt;' '&gt;')? '{' '}' (rule end)
	 *     identifiant=ID (ambiguity) ('&lt;' '&gt;')? '{' variables+=VariableDeclaration
	 
	 * </pre>
	 */
	protected void emit_TaskSimple___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('&lt;' '&gt;')?
	 *
	 * This ambiguous syntax occurs at:
	 *     entrees+=Parameter ')' (ambiguity) '{' 'description' ':' descriptionActeur=STRING
	 *     entrees+=Parameter ')' (ambiguity) '{' '}' (rule end)
	 *     entrees+=Parameter ')' (ambiguity) '{' variables+=VariableDeclaration
	 *     identifiant=ID ('(' ')')? (ambiguity) '{' 'description' ':' descriptionActeur=STRING
	 *     identifiant=ID ('(' ')')? (ambiguity) '{' '}' (rule end)
	 *     identifiant=ID ('(' ')')? (ambiguity) '{' variables+=VariableDeclaration
	 
	 * </pre>
	 */
	protected void emit_TaskSimple___LessThanSignKeyword_3_0_GreaterThanSignKeyword_3_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
