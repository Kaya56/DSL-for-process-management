/*
 * generated by Xtext 2.35.0
 */
grammar InternalProcess;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.process.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.process.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.process.services.ProcessGrammarAccess;

}

@parser::members {

 	private ProcessGrammarAccess grammarAccess;

    public InternalProcessParser(TokenStream input, ProcessGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected ProcessGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getProcessusProcessParserRuleCall_0());
			}
			lv_processus_0_0=ruleProcess
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"processus",
					lv_processus_0_0,
					"org.xtext.example.process.Process.Process");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleProcess
entryRuleProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessRule()); }
	iv_ruleProcess=ruleProcess
	{ $current=$iv_ruleProcess.current; }
	EOF;

// Rule Process
ruleProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Process'
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessAccess().getProcessKeyword_0());
		}
		(
			(
				lv_identifiant_1_0=RULE_ID
				{
					newLeafNode(lv_identifiant_1_0, grammarAccess.getProcessAccess().getIdentifiantIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcessRule());
					}
					setWithLastConsumed(
						$current,
						"identifiant",
						lv_identifiant_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getProcessAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcessAccess().getEntreesParameterParserRuleCall_2_1_0());
					}
					lv_entrees_3_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcessRule());
						}
						add(
							$current,
							"entrees",
							lv_entrees_3_0,
							"org.xtext.example.process.Process.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getProcessAccess().getRightParenthesisKeyword_2_2());
			}
		)?
		(
			otherlv_5='<'
			{
				newLeafNode(otherlv_5, grammarAccess.getProcessAccess().getLessThanSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcessAccess().getSortiesParameterParserRuleCall_3_1_0());
					}
					lv_sorties_6_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcessRule());
						}
						add(
							$current,
							"sorties",
							lv_sorties_6_0,
							"org.xtext.example.process.Process.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_7='>'
			{
				newLeafNode(otherlv_7, grammarAccess.getProcessAccess().getGreaterThanSignKeyword_3_2());
			}
		)?
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessAccess().getVariablesVariableDeclarationParserRuleCall_5_0());
				}
				lv_variables_9_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessRule());
					}
					add(
						$current,
						"variables",
						lv_variables_9_0,
						"org.xtext.example.process.Process.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessAccess().getActeurCategoriesActorCategoryParserRuleCall_6_0());
				}
				lv_acteurCategories_10_0=ruleActorCategory
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessRule());
					}
					add(
						$current,
						"acteurCategories",
						lv_acteurCategories_10_0,
						"org.xtext.example.process.Process.ActorCategory");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessAccess().getTachesTaskParserRuleCall_7_0());
				}
				lv_taches_11_0=ruleTask
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessRule());
					}
					add(
						$current,
						"taches",
						lv_taches_11_0,
						"org.xtext.example.process.Process.Task");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleActorCategory
entryRuleActorCategory returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActorCategoryRule()); }
	iv_ruleActorCategory=ruleActorCategory
	{ $current=$iv_ruleActorCategory.current; }
	EOF;

// Rule ActorCategory
ruleActorCategory returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ActorCategory'
		{
			newLeafNode(otherlv_0, grammarAccess.getActorCategoryAccess().getActorCategoryKeyword_0());
		}
		(
			(
				lv_identifiant_1_0=RULE_ID
				{
					newLeafNode(lv_identifiant_1_0, grammarAccess.getActorCategoryAccess().getIdentifiantIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActorCategoryRule());
					}
					setWithLastConsumed(
						$current,
						"identifiant",
						lv_identifiant_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getActorCategoryAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='codeActeur'
		{
			newLeafNode(otherlv_3, grammarAccess.getActorCategoryAccess().getCodeActeurKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getActorCategoryAccess().getColonKeyword_4());
		}
		(
			(
				lv_codeActeur_5_0=RULE_STRING
				{
					newLeafNode(lv_codeActeur_5_0, grammarAccess.getActorCategoryAccess().getCodeActeurSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActorCategoryRule());
					}
					setWithLastConsumed(
						$current,
						"codeActeur",
						lv_codeActeur_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getActorCategoryAccess().getCommaKeyword_6_0());
			}
			(
				(
					lv_codeActeurs_7_0=RULE_STRING
					{
						newLeafNode(lv_codeActeurs_7_0, grammarAccess.getActorCategoryAccess().getCodeActeursSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActorCategoryRule());
						}
						addWithLastConsumed(
							$current,
							"codeActeurs",
							lv_codeActeurs_7_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getActorCategoryAccess().getVariablesVariableDeclarationParserRuleCall_7_0());
				}
				lv_variables_8_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorCategoryRule());
					}
					add(
						$current,
						"variables",
						lv_variables_8_0,
						"org.xtext.example.process.Process.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='descriptionActeur'
		{
			newLeafNode(otherlv_9, grammarAccess.getActorCategoryAccess().getDescriptionActeurKeyword_8());
		}
		otherlv_10=':'
		{
			newLeafNode(otherlv_10, grammarAccess.getActorCategoryAccess().getColonKeyword_9());
		}
		(
			(
				lv_descriptionActeur_11_0=RULE_STRING
				{
					newLeafNode(lv_descriptionActeur_11_0, grammarAccess.getActorCategoryAccess().getDescriptionActeurSTRINGTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActorCategoryRule());
					}
					setWithLastConsumed(
						$current,
						"descriptionActeur",
						lv_descriptionActeur_11_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_12='acteursConcrets'
			{
				newLeafNode(otherlv_12, grammarAccess.getActorCategoryAccess().getActeursConcretsKeyword_11_0());
			}
			otherlv_13=':'
			{
				newLeafNode(otherlv_13, grammarAccess.getActorCategoryAccess().getColonKeyword_11_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActorCategoryAccess().getActeursConcretsConcretActorParserRuleCall_11_2_0());
					}
					lv_acteursConcrets_14_0=ruleConcretActor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActorCategoryRule());
						}
						add(
							$current,
							"acteursConcrets",
							lv_acteursConcrets_14_0,
							"org.xtext.example.process.Process.ConcretActor");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getActorCategoryAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleConcretActor
entryRuleConcretActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcretActorRule()); }
	iv_ruleConcretActor=ruleConcretActor
	{ $current=$iv_ruleConcretActor.current; }
	EOF;

// Rule ConcretActor
ruleConcretActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ConcretActor'
		{
			newLeafNode(otherlv_0, grammarAccess.getConcretActorAccess().getConcretActorKeyword_0());
		}
		(
			(
				lv_identifiant_1_0=RULE_ID
				{
					newLeafNode(lv_identifiant_1_0, grammarAccess.getConcretActorAccess().getIdentifiantIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcretActorRule());
					}
					setWithLastConsumed(
						$current,
						"identifiant",
						lv_identifiant_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConcretActorAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='descriptionActeur'
		{
			newLeafNode(otherlv_3, grammarAccess.getConcretActorAccess().getDescriptionActeurKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getConcretActorAccess().getColonKeyword_4());
		}
		(
			(
				lv_descriptionActeur_5_0=RULE_STRING
				{
					newLeafNode(lv_descriptionActeur_5_0, grammarAccess.getConcretActorAccess().getDescriptionActeurSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcretActorRule());
					}
					setWithLastConsumed(
						$current,
						"descriptionActeur",
						lv_descriptionActeur_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConcretActorAccess().getVariablesVariableDeclarationParserRuleCall_6_0());
				}
				lv_variables_6_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConcretActorRule());
					}
					add(
						$current,
						"variables",
						lv_variables_6_0,
						"org.xtext.example.process.Process.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getConcretActorAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleTask
entryRuleTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTaskRule()); }
	iv_ruleTask=ruleTask
	{ $current=$iv_ruleTask.current; }
	EOF;

// Rule Task
ruleTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTaskAccess().getTaskSimpleParserRuleCall_0());
		}
		this_TaskSimple_0=ruleTaskSimple
		{
			$current = $this_TaskSimple_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTaskAccess().getTaskCompositeParserRuleCall_1());
		}
		this_TaskComposite_1=ruleTaskComposite
		{
			$current = $this_TaskComposite_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTaskSimple
entryRuleTaskSimple returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTaskSimpleRule()); }
	iv_ruleTaskSimple=ruleTaskSimple
	{ $current=$iv_ruleTaskSimple.current; }
	EOF;

// Rule TaskSimple
ruleTaskSimple returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TaskSimple'
		{
			newLeafNode(otherlv_0, grammarAccess.getTaskSimpleAccess().getTaskSimpleKeyword_0());
		}
		(
			(
				lv_identifiant_1_0=RULE_ID
				{
					newLeafNode(lv_identifiant_1_0, grammarAccess.getTaskSimpleAccess().getIdentifiantIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskSimpleRule());
					}
					setWithLastConsumed(
						$current,
						"identifiant",
						lv_identifiant_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getTaskSimpleAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTaskSimpleAccess().getEntreesParameterParserRuleCall_2_1_0());
					}
					lv_entrees_3_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTaskSimpleRule());
						}
						add(
							$current,
							"entrees",
							lv_entrees_3_0,
							"org.xtext.example.process.Process.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getTaskSimpleAccess().getRightParenthesisKeyword_2_2());
			}
		)?
		(
			otherlv_5='<'
			{
				newLeafNode(otherlv_5, grammarAccess.getTaskSimpleAccess().getLessThanSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTaskSimpleAccess().getSortiesParameterParserRuleCall_3_1_0());
					}
					lv_sorties_6_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTaskSimpleRule());
						}
						add(
							$current,
							"sorties",
							lv_sorties_6_0,
							"org.xtext.example.process.Process.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_7='>'
			{
				newLeafNode(otherlv_7, grammarAccess.getTaskSimpleAccess().getGreaterThanSignKeyword_3_2());
			}
		)?
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getTaskSimpleAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_9='description'
			{
				newLeafNode(otherlv_9, grammarAccess.getTaskSimpleAccess().getDescriptionKeyword_5_0());
			}
			otherlv_10=':'
			{
				newLeafNode(otherlv_10, grammarAccess.getTaskSimpleAccess().getColonKeyword_5_1());
			}
			(
				(
					lv_descriptionActeur_11_0=RULE_STRING
					{
						newLeafNode(lv_descriptionActeur_11_0, grammarAccess.getTaskSimpleAccess().getDescriptionActeurSTRINGTerminalRuleCall_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTaskSimpleRule());
						}
						setWithLastConsumed(
							$current,
							"descriptionActeur",
							lv_descriptionActeur_11_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTaskSimpleAccess().getVariablesVariableDeclarationParserRuleCall_6_0());
				}
				lv_variables_12_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTaskSimpleRule());
					}
					add(
						$current,
						"variables",
						lv_variables_12_0,
						"org.xtext.example.process.Process.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getTaskSimpleAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleTaskComposite
entryRuleTaskComposite returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTaskCompositeRule()); }
	iv_ruleTaskComposite=ruleTaskComposite
	{ $current=$iv_ruleTaskComposite.current; }
	EOF;

// Rule TaskComposite
ruleTaskComposite returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TaskComposite'
		{
			newLeafNode(otherlv_0, grammarAccess.getTaskCompositeAccess().getTaskCompositeKeyword_0());
		}
		(
			(
				lv_identifiant_1_0=RULE_ID
				{
					newLeafNode(lv_identifiant_1_0, grammarAccess.getTaskCompositeAccess().getIdentifiantIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskCompositeRule());
					}
					setWithLastConsumed(
						$current,
						"identifiant",
						lv_identifiant_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getTaskCompositeAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTaskCompositeAccess().getEntreesParameterParserRuleCall_2_1_0());
					}
					lv_entrees_3_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTaskCompositeRule());
						}
						add(
							$current,
							"entrees",
							lv_entrees_3_0,
							"org.xtext.example.process.Process.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getTaskCompositeAccess().getRightParenthesisKeyword_2_2());
			}
		)?
		(
			otherlv_5='<'
			{
				newLeafNode(otherlv_5, grammarAccess.getTaskCompositeAccess().getLessThanSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTaskCompositeAccess().getSortiesParameterParserRuleCall_3_1_0());
					}
					lv_sorties_6_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTaskCompositeRule());
						}
						add(
							$current,
							"sorties",
							lv_sorties_6_0,
							"org.xtext.example.process.Process.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_7='>'
			{
				newLeafNode(otherlv_7, grammarAccess.getTaskCompositeAccess().getGreaterThanSignKeyword_3_2());
			}
		)?
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getTaskCompositeAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTaskCompositeAccess().getVariablesVariableDeclarationParserRuleCall_5_0());
				}
				lv_variables_9_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTaskCompositeRule());
					}
					add(
						$current,
						"variables",
						lv_variables_9_0,
						"org.xtext.example.process.Process.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_10='description'
			{
				newLeafNode(otherlv_10, grammarAccess.getTaskCompositeAccess().getDescriptionKeyword_6_0());
			}
			otherlv_11=':'
			{
				newLeafNode(otherlv_11, grammarAccess.getTaskCompositeAccess().getColonKeyword_6_1());
			}
			(
				(
					lv_descriptionActeur_12_0=RULE_STRING
					{
						newLeafNode(lv_descriptionActeur_12_0, grammarAccess.getTaskCompositeAccess().getDescriptionActeurSTRINGTerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTaskCompositeRule());
						}
						setWithLastConsumed(
							$current,
							"descriptionActeur",
							lv_descriptionActeur_12_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_13='taches'
		{
			newLeafNode(otherlv_13, grammarAccess.getTaskCompositeAccess().getTachesKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTaskCompositeAccess().getTachesTaskParserRuleCall_8_0());
				}
				lv_taches_14_0=ruleTask
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTaskCompositeRule());
					}
					add(
						$current,
						"taches",
						lv_taches_14_0,
						"org.xtext.example.process.Process.Task");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getTaskCompositeAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getParameterAccess().getSimpleParameterParserRuleCall_0());
		}
		this_SimpleParameter_0=ruleSimpleParameter
		{
			$current = $this_SimpleParameter_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getParameterAccess().getComplexParameterParserRuleCall_1());
		}
		this_ComplexParameter_1=ruleComplexParameter
		{
			$current = $this_ComplexParameter_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleParameter
entryRuleSimpleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleParameterRule()); }
	iv_ruleSimpleParameter=ruleSimpleParameter
	{ $current=$iv_ruleSimpleParameter.current; }
	EOF;

// Rule SimpleParameter
ruleSimpleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimpleParameterAccess().getStringParameterParserRuleCall_0());
		}
		this_StringParameter_0=ruleStringParameter
		{
			$current = $this_StringParameter_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleParameterAccess().getIntParameterParserRuleCall_1());
		}
		this_IntParameter_1=ruleIntParameter
		{
			$current = $this_IntParameter_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleParameterAccess().getFloatParameterParserRuleCall_2());
		}
		this_FloatParameter_2=ruleFloatParameter
		{
			$current = $this_FloatParameter_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleParameterAccess().getBooleanParameterParserRuleCall_3());
		}
		this_BooleanParameter_3=ruleBooleanParameter
		{
			$current = $this_BooleanParameter_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleParameterAccess().getVariableDeclarationParserRuleCall_4());
		}
		this_VariableDeclaration_4=ruleVariableDeclaration
		{
			$current = $this_VariableDeclaration_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStringParameter
entryRuleStringParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringParameterRule()); }
	iv_ruleStringParameter=ruleStringParameter
	{ $current=$iv_ruleStringParameter.current; }
	EOF;

// Rule StringParameter
ruleStringParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='String'
		{
			newLeafNode(otherlv_0, grammarAccess.getStringParameterAccess().getStringKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getStringParameterAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringParameterRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleIntParameter
entryRuleIntParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntParameterRule()); }
	iv_ruleIntParameter=ruleIntParameter
	{ $current=$iv_ruleIntParameter.current; }
	EOF;

// Rule IntParameter
ruleIntParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Int'
		{
			newLeafNode(otherlv_0, grammarAccess.getIntParameterAccess().getIntKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_INT
				{
					newLeafNode(lv_value_1_0, grammarAccess.getIntParameterAccess().getValueINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntParameterRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleFloatParameter
entryRuleFloatParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloatParameterRule()); }
	iv_ruleFloatParameter=ruleFloatParameter
	{ $current=$iv_ruleFloatParameter.current; }
	EOF;

// Rule FloatParameter
ruleFloatParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Float'
		{
			newLeafNode(otherlv_0, grammarAccess.getFloatParameterAccess().getFloatKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_FLOAT
				{
					newLeafNode(lv_value_1_0, grammarAccess.getFloatParameterAccess().getValueFLOATTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFloatParameterRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.xtext.example.process.Process.FLOAT");
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanParameter
entryRuleBooleanParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanParameterRule()); }
	iv_ruleBooleanParameter=ruleBooleanParameter
	{ $current=$iv_ruleBooleanParameter.current; }
	EOF;

// Rule BooleanParameter
ruleBooleanParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Boolean'
		{
			newLeafNode(otherlv_0, grammarAccess.getBooleanParameterAccess().getBooleanKeyword_0());
		}
		(
			(
				(
					lv_value_1_1='true'
					{
						newLeafNode(lv_value_1_1, grammarAccess.getBooleanParameterAccess().getValueTrueKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanParameterRule());
						}
						setWithLastConsumed($current, "value", lv_value_1_1, null);
					}
					    |
					lv_value_1_2='false'
					{
						newLeafNode(lv_value_1_2, grammarAccess.getBooleanParameterAccess().getValueFalseKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBooleanParameterRule());
						}
						setWithLastConsumed($current, "value", lv_value_1_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleComplexParameter
entryRuleComplexParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplexParameterRule()); }
	iv_ruleComplexParameter=ruleComplexParameter
	{ $current=$iv_ruleComplexParameter.current; }
	EOF;

// Rule ComplexParameter
ruleComplexParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComplexParameterAccess().getProcessParserRuleCall_0());
		}
		this_Process_0=ruleProcess
		{
			$current = $this_Process_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComplexParameterAccess().getTaskSimpleParserRuleCall_1());
		}
		this_TaskSimple_1=ruleTaskSimple
		{
			$current = $this_TaskSimple_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComplexParameterAccess().getTaskCompositeParserRuleCall_2());
		}
		this_TaskComposite_2=ruleTaskComposite
		{
			$current = $this_TaskComposite_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComplexParameterAccess().getActorCategoryParserRuleCall_3());
		}
		this_ActorCategory_3=ruleActorCategory
		{
			$current = $this_ActorCategory_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComplexParameterAccess().getConcretActorParserRuleCall_4());
		}
		this_ConcretActor_4=ruleConcretActor
		{
			$current = $this_ConcretActor_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComplexParameterAccess().getCustumParameterParserRuleCall_5());
		}
		this_CustumParameter_5=ruleCustumParameter
		{
			$current = $this_CustumParameter_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCustumParameter
entryRuleCustumParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCustumParameterRule()); }
	iv_ruleCustumParameter=ruleCustumParameter
	{ $current=$iv_ruleCustumParameter.current; }
	EOF;

// Rule CustumParameter
ruleCustumParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CustumParameter'
		{
			newLeafNode(otherlv_0, grammarAccess.getCustumParameterAccess().getCustumParameterKeyword_0());
		}
		(
			(
				lv_nomParametre_1_0=RULE_ID
				{
					newLeafNode(lv_nomParametre_1_0, grammarAccess.getCustumParameterAccess().getNomParametreIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCustumParameterRule());
					}
					setWithLastConsumed(
						$current,
						"nomParametre",
						lv_nomParametre_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getCustumParameterAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCustumParameterAccess().getParametresEntreeParameterParserRuleCall_2_1_0());
					}
					lv_parametresEntree_3_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCustumParameterRule());
						}
						add(
							$current,
							"parametresEntree",
							lv_parametresEntree_3_0,
							"org.xtext.example.process.Process.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getCustumParameterAccess().getRightParenthesisKeyword_2_2());
			}
		)?
		(
			otherlv_5='<'
			{
				newLeafNode(otherlv_5, grammarAccess.getCustumParameterAccess().getLessThanSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCustumParameterAccess().getParametresSortieParameterParserRuleCall_3_1_0());
					}
					lv_parametresSortie_6_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCustumParameterRule());
						}
						add(
							$current,
							"parametresSortie",
							lv_parametresSortie_6_0,
							"org.xtext.example.process.Process.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_7='>'
			{
				newLeafNode(otherlv_7, grammarAccess.getCustumParameterAccess().getGreaterThanSignKeyword_3_2());
			}
		)?
		(
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getCustumParameterAccess().getLeftCurlyBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCustumParameterAccess().getVariablesVariableDeclarationParserRuleCall_4_1_0());
					}
					lv_variables_9_0=ruleVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCustumParameterRule());
						}
						add(
							$current,
							"variables",
							lv_variables_9_0,
							"org.xtext.example.process.Process.VariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				otherlv_10='descriptionActeur'
				{
					newLeafNode(otherlv_10, grammarAccess.getCustumParameterAccess().getDescriptionActeurKeyword_4_2_0());
				}
				otherlv_11=':'
				{
					newLeafNode(otherlv_11, grammarAccess.getCustumParameterAccess().getColonKeyword_4_2_1());
				}
				(
					(
						lv_descriptionActeur_12_0=RULE_STRING
						{
							newLeafNode(lv_descriptionActeur_12_0, grammarAccess.getCustumParameterAccess().getDescriptionActeurSTRINGTerminalRuleCall_4_2_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCustumParameterRule());
							}
							setWithLastConsumed(
								$current,
								"descriptionActeur",
								lv_descriptionActeur_12_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)?
			otherlv_13='}'
			{
				newLeafNode(otherlv_13, grammarAccess.getCustumParameterAccess().getRightCurlyBracketKeyword_4_3());
			}
		)?
	)
;

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDeclarationRule()); }
	iv_ruleVariableDeclaration=ruleVariableDeclaration
	{ $current=$iv_ruleVariableDeclaration.current; }
	EOF;

// Rule VariableDeclaration
ruleVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeVariableTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.xtext.example.process.Process.VariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_identifiant_1_0=RULE_ID
				{
					newLeafNode(lv_identifiant_1_0, grammarAccess.getVariableDeclarationAccess().getIdentifiantIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"identifiant",
						lv_identifiant_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValueExpressionParserRuleCall_2_1_0());
					}
					lv_value_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
						}
						set(
							$current,
							"value",
							lv_value_3_0,
							"org.xtext.example.process.Process.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getVariableDeclarationAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValueExpressionParserRuleCall_2_2_1_0());
						}
						lv_value_5_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
							}
							set(
								$current,
								"value",
								lv_value_5_0,
								"org.xtext.example.process.Process.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleVariableType
entryRuleVariableType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVariableTypeRule()); }
	iv_ruleVariableType=ruleVariableType
	{ $current=$iv_ruleVariableType.current.getText(); }
	EOF;

// Rule VariableType
ruleVariableType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getVariableTypeAccess().getSimpleVariableTypeParserRuleCall_0());
		}
		this_SimpleVariableType_0=ruleSimpleVariableType
		{
			$current.merge(this_SimpleVariableType_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVariableTypeAccess().getComplexVariableTypeParserRuleCall_1());
		}
		this_ComplexVariableType_1=ruleComplexVariableType
		{
			$current.merge(this_ComplexVariableType_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVariableTypeAccess().getArrayTypeParserRuleCall_2());
		}
		this_ArrayType_2=ruleArrayType
		{
			$current.merge(this_ArrayType_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleVariableType
entryRuleSimpleVariableType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSimpleVariableTypeRule()); }
	iv_ruleSimpleVariableType=ruleSimpleVariableType
	{ $current=$iv_ruleSimpleVariableType.current.getText(); }
	EOF;

// Rule SimpleVariableType
ruleSimpleVariableType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='int'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSimpleVariableTypeAccess().getIntKeyword_0());
		}
		    |
		kw='string'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSimpleVariableTypeAccess().getStringKeyword_1());
		}
		    |
		kw='float'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSimpleVariableTypeAccess().getFloatKeyword_2());
		}
		    |
		kw='boolean'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSimpleVariableTypeAccess().getBooleanKeyword_3());
		}
	)
;

// Entry rule entryRuleComplexVariableType
entryRuleComplexVariableType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getComplexVariableTypeRule()); }
	iv_ruleComplexVariableType=ruleComplexVariableType
	{ $current=$iv_ruleComplexVariableType.current.getText(); }
	EOF;

// Rule ComplexVariableType
ruleComplexVariableType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Process'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComplexVariableTypeAccess().getProcessKeyword_0());
		}
		    |
		kw='TaskSimple'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComplexVariableTypeAccess().getTaskSimpleKeyword_1());
		}
		    |
		kw='TaskComposite'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComplexVariableTypeAccess().getTaskCompositeKeyword_2());
		}
		    |
		kw='ActorCategory'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComplexVariableTypeAccess().getActorCategoryKeyword_3());
		}
		    |
		kw='ConcretActor'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComplexVariableTypeAccess().getConcretActorKeyword_4());
		}
	)
;

// Entry rule entryRuleArrayType
entryRuleArrayType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getArrayTypeRule()); }
	iv_ruleArrayType=ruleArrayType
	{ $current=$iv_ruleArrayType.current.getText(); }
	EOF;

// Rule ArrayType
ruleArrayType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getArrayTypeAccess().getSimpleVariableTypeParserRuleCall_0_0());
			}
			this_SimpleVariableType_0=ruleSimpleVariableType
			{
				$current.merge(this_SimpleVariableType_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw='['
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0_1());
			}
			kw=']'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_0_2());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getArrayTypeAccess().getComplexVariableTypeParserRuleCall_1_0());
			}
			this_ComplexVariableType_3=ruleComplexVariableType
			{
				$current.merge(this_ComplexVariableType_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw='['
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_1_1());
			}
			kw=']'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getLiteralParserRuleCall_0());
		}
		this_Literal_0=ruleLiteral
		{
			$current = $this_Literal_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getVariableReferenceParserRuleCall_1());
		}
		this_VariableReference_1=ruleVariableReference
		{
			$current = $this_VariableReference_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getArrayAccessParserRuleCall_2());
		}
		this_ArrayAccess_2=ruleArrayAccess
		{
			$current = $this_ArrayAccess_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_0());
		}
		this_StringLiteral_0=ruleStringLiteral
		{
			$current = $this_StringLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_1());
		}
		this_IntLiteral_1=ruleIntLiteral
		{
			$current = $this_IntLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_2());
		}
		this_FloatLiteral_2=ruleFloatLiteral
		{
			$current = $this_FloatLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_3());
		}
		this_BooleanLiteral_3=ruleBooleanLiteral
		{
			$current = $this_BooleanLiteral_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntLiteralRule()); }
	iv_ruleIntLiteral=ruleIntLiteral
	{ $current=$iv_ruleIntLiteral.current; }
	EOF;

// Rule IntLiteral
ruleIntLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloatLiteralRule()); }
	iv_ruleFloatLiteral=ruleFloatLiteral
	{ $current=$iv_ruleFloatLiteral.current; }
	EOF;

// Rule FloatLiteral
ruleFloatLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_FLOAT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getFloatLiteralAccess().getValueFLOATTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFloatLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.example.process.Process.FLOAT");
			}
		)
	)
;

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); }
	iv_ruleBooleanLiteral=ruleBooleanLiteral
	{ $current=$iv_ruleBooleanLiteral.current; }
	EOF;

// Rule BooleanLiteral
ruleBooleanLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1='true'
				{
					newLeafNode(lv_value_0_1, grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanLiteralRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_1, null);
				}
				    |
				lv_value_0_2='false'
				{
					newLeafNode(lv_value_0_2, grammarAccess.getBooleanLiteralAccess().getValueFalseKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanLiteralRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleVariableReference
entryRuleVariableReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableReferenceRule()); }
	iv_ruleVariableReference=ruleVariableReference
	{ $current=$iv_ruleVariableReference.current; }
	EOF;

// Rule VariableReference
ruleVariableReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVariableReferenceRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getVariableReferenceAccess().getVariableVariableDeclarationCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleArrayAccess
entryRuleArrayAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayAccessRule()); }
	iv_ruleArrayAccess=ruleArrayAccess
	{ $current=$iv_ruleArrayAccess.current; }
	EOF;

// Rule ArrayAccess
ruleArrayAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArrayAccessRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getArrayAccessAccess().getArrayVariableDeclarationCrossReference_0_0());
				}
			)
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getArrayAccessAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				lv_index_2_0=RULE_INT
				{
					newLeafNode(lv_index_2_0, grammarAccess.getArrayAccessAccess().getIndexINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArrayAccessRule());
					}
					setWithLastConsumed(
						$current,
						"index",
						lv_index_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getArrayAccessAccess().getRightSquareBracketKeyword_3());
		}
	)
;

RULE_FLOAT : '-'? RULE_INT '.' RULE_INT (('e'|'E') '-'? RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
